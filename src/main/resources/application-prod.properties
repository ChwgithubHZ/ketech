#  ================================ \u7701\u5385\u5185\u7F51\u751F\u4EA7\u73AF\u5883\u914D\u7F6E ======================================  #

server.port=58889
# \u5E94\u7528\u7A0B\u5E8F\u4E0A\u4E0B\u6587  http://127.0.0.1:8081/api/hello
server.servlet.context-path=/datas-bq

# log config
logging.config=classpath:logback/logback-prod.xml

# datasource

#
## -------------------------------  \u7701\u5385\u5185\u7F51 pg \u8FDE\u63A5\u6C60 -----------------------------#
spring.datasource.bq.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.bq.driver-class-name=org.postgresql.Driver
spring.datasource.bq.url=jdbc:postgresql://rdsal63z9cc7lh67f9l3.pg.yun.zj/data_warehouse
spring.datasource.bq.username=data_warehouse
spring.datasource.bq.password=dw190306



#------------------------------\u7701\u5385\u5185\u7F51--NEO4J\u8FDE\u63A5-----------------------------------------------
spring.datasource.neofj.url=bolt://41.188.38.90:57687
spring.datasource.neofj.username=neo4j
spring.datasource.neofj.password=kedu.123456




# \u9A8C\u8BC1\u8FDE\u63A5\u6C60 \u662F\u5426\u6709\u6548
spring.datasource.bq.validationQuery=SELECT 'x'
# ----------------------    \u6570\u636E\u5E93\u8FDE\u63A5  fz\u6570\u636E\u5E93-----------------------------#
spring.datasource.fz.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.fz.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.fz.url=D65667653587081E201C42BD0A4FBBAF
spring.datasource.fz.username=DEC8AB92BC47250CEE361E1351B9C6D1
spring.datasource.fz.password=DB083C13DFDBCE7FBB87B87B8088CF86
# \u9A8C\u8BC1\u8FDE\u63A5\u6C60 \u662F\u5426\u6709\u6548
spring.datasource.fz.validationQuery=SELECT 1 FROM DUAL

# \u521D\u59CB\u5316\u5927\u5C0F
spring.datasource.initialSize=5
# \u6700\u5C0F\u8FDE\u63A5\u6570
spring.datasource.minIdle=1
# \u6700\u5927\u8FDE\u63A5\u6570
spring.datasource.maxActive=50
# \u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u8FDE\u63A5\uFF0C\u5355\u4F4D\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000

spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00 pscache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0Apscache\u5927\u5C0F
spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters \u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectionProperties\u5C5E\u6027\u6253\u5F00 mergedsql \u529F\u80FD\uFF0C\u6162sql\u8BB0\u5F55\u3002
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \uFFFD\u03F2\uFFFD\uFFFD\uFFFD\uFFFDDruidDataSource\uFFFD\u013C\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
#spring.datasource.useGlobalDataSourceStat=true


## \u81EA\u52A8\u4EE5\u914D\u7F6E\u7C7B \u6D4B\u8BD5
appKey=1
appSecret=1
bucket=lynn
endPoint=https://www.aliyun.com

